@inject HttpClient Http

<MudPaper Style="background-color:transparent" Elevation="0" Class="trailers mt-14">
	<div class="container">
		<div class="row ipad-width">
			<div class="col-md-12">
				<div class="title-hd">
					<h2>Trailers - @trailerTitle</h2>
					<a href="#" class="viewall">View all <i class="ion-ios-arrow-right"></i></a>
				</div>
				<div class="videos">
					<div class="vid-container">
          <iframe id="vid_frame" src="@($"https://youtube.com/embed/{source}?autoplay=1&rel=0&showinfo=0&autohide=1")" frameborder="0" width="560" height="315"></iframe>
      </div>

      <!-- THE PLAYLIST -->
      <div class="vid-list-container">
            <ol id="vid-list">
			@foreach (var item in Movies)
			{
				<li class="selected">
					<MudLink Class="cursor-pointer" Color="Color.Secondary"  @onclick="@(()=>getVideos(item.Id))">
					  <MudText Color="Color.Inherit" Typo="Typo.caption" style="margin-right:5px" class="vid-thumb"><img width=72 src="@("http://image.tmdb.org/t/p/w92/" + item.BackdropPath)" /></MudText>
					  <div class="desc">@item.Title</div>
					</MudLink>
				</li>
			}
				   
			
              

            </ol>
       </div>
				</div>   
			</div>
		</div>
		</div>

	</MudPaper>





@code{

	Movie? video{ get; set; }
	string source = "";
	string trailerTitle = "";
	[CascadingParameter] public List<Movie>? Movies { get; set; }
	async Task getVideos(int MovieId)
	{
		try
		{
			video = await Http.GetFromJsonAsync<Movie>($"/api/Details/GetTrailer/{MovieId}");
		}
		catch
		{

		}
		foreach(var item in video.Videos.Results.Take(1))
		{
			source = item.Key;
			trailerTitle = item.Name;
		}

	}

}




@*<li class="selected">
	<a href="javascript:void();" onClick="document.getElementById('vid_frame').src='https://youtube.com/embed/cOSEOYi9JS4?autoplay=1&rel=0&showinfo=0&autohide=1'">
	<span class="vid-thumb"><img width=72 src="@("http://image.tmdb.org/t/p/w92/" + item.BackdropPath)" /></span>
	<div class="desc">@item.ti</div>
	</a>
</li>*@



<style>
    .vid-container {
		    position: relative;
		    padding-bottom: 52%;
		    padding-top: 30px; 
		    height: 0; 
        width:70%;
        float:left;
		}
		 
		.vid-container iframe,
		.vid-container object,
		.vid-container embed {
		    position: absolute;
		    top: 0;
		    left: 0;
		    width: 100%;
		    min-height: 360px;
		}


		/*  VIDEOS PLAYLIST 
 		############################### */
		.vid-list-container {
			width: 30%;
      height:360px;
			overflow: hidden;
      float:right;
		}

    .vid-list-container:hover, .vid-list-container:focus {
       overflow-y: auto;
     }

		ol#vid-list {
      margin:0;
      padding:0;
      background: rgba(78, 17, 118, 0.15)
		}

    ol#vid-list li {
		  list-style: none;
    }

    ol#vid-list li a {
      text-decoration: none;
      background-color: rgba(78, 17, 118, 0.15);
      height:55px;
      display:block;
      padding:10px;
    }

    ol#vid-list li a:hover, 
    ol#vid-list li.selected a {
      background-color:#666666
    }

		.vid-thumb {
      float:left;
			margin-right: 8px;
		}

    .active-vid { 
      background:#3A3A3A;
    }

		#vid-list .desc {
			color: #CACACA;
			font-size: 13px;
			margin-top:5px;
		}


		.media (max-width: 624px) {
			body {
				margin: 15px;
			}
			.caption {
				margin-top: 40px;
			}
			.vid-list-container {
				padding-bottom: 20px;
			}

		}
</style>

